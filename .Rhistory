knitr::opts_chunk$set(echo = TRUE,
size = "small",
collapse = TRUE,
comment = NA,
warning = FALSE,
message = FALSE,
error = TRUE)
# load the necessary libraries
library(tidyverse)
library(stringr)
library(purrr)
library(ggthemes)
library(rvest)
library(polite)
# Set ggplot theme
theme_set(theme_stata(base_size = 8))
session1 <- bow(url = "https://www.the-numbers.com/movie/budgets/all") %>% scrape() %>%
html_nodes(css = "table") %>%
html_table()
table_base <- session1[[1]]
idx <- 1
new_urls <- "https://www.the-numbers.com/movie/budgets/all/"
table_new <-data.frame()
df2 <- data.frame()
idx <-  seq(1, 6301, 100)
idx = 1
new_webpage <- read_html(str_glue(new_urls, {idx[i]}))
i = 1
idx <-  seq(1, 6301, 100)
new_webpage <- read_html(str_glue(new_urls, {idx[i]}))
table_new <- html_table(new_webpage)[[1]] %>%
tibble::as_tibble(.name_repair = "unique")
?as_tibble
df2 <- rbind(df2, table_new)
df2
# Alternate using bow, takes very long
df3 <- data.frame()
urls <- map(idx, function(i) str_glue("https://www.the-numbers.com/movie/budgets/all/", {i}))
urls
urls <- map(idx, ~str_glue("https://www.the-numbers.com/movie/budgets/all/", {.i}))
urls <- map(idx, ~str_glue("https://www.the-numbers.com/movie/budgets/all/", {i}))
urls
urls <- map_df(idx, ~str_glue("https://www.the-numbers.com/movie/budgets/all/", {i}))
urls <- map_df(idx, ~str_glue("https://www.the-numbers.com/movie/budgets/all/", {.i}))
urls <- map_dfr(idx, ~str_glue("https://www.the-numbers.com/movie/budgets/all/", {i}))
urls <- map_dfc(idx, ~str_glue("https://www.the-numbers.com/movie/budgets/all/", {i}))
urls <- map(idx, ~str_glue("https://www.the-numbers.com/movie/budgets/all/", {i}))
urls
sessions <- lapply(urls, function(i) read_html[i] %>% html_elements(css = "table") %>% html_table())
sessions <- lapply(urls, ~read_html[i] %>% html_elements(css = "table") %>% html_table())
sessions <- lapply(urls, ~read_html %>% html_elements(css = "table") %>% html_table())
sessions <- lapply(urls, ~read_html)
sessions <- lapply(urls, ~read_html())
sessions <- lapply(urls, ~read_html(x))
sessions <- lapply(urls, ~read_html(.x))
sessions <- lapply(urls, ~read_html())
sessions <- map(urls, ~read_html(.x))
sessions[[1]]
sessions[[2]]
sessions[[3]]
sessions <- map(urls, ~read_html(.x) %>% html_elements(css = "table") %>% html_table())
sessions[[1]]
sessions <- map_df(urls, ~read_html(.x) %>% html_elements(css = "table") %>% html_table())
sessions
knitr::kable(head(df2), format = "html")
knitr::kable(head(df2))
readr::write_csv(df2, "my_data.csv")
mca <- data.frame(percent = c(23.5, 34.7, 19.8, 22.0, 27.6, 32.1, 20.2, 20.2, 26.0, 30.7, 22.1, 21.1),
portfolio = factor(rep(c("Commodities", "Stocks", "Real State", "Other Assets"), 3),
levels=c("Commodities", "Stocks", "Real State", "Other Assets")),
year = rep(c("2020","2021","2022"), each=4))
glimpse(mca)
mca <- data.frame(percent = c(23.5, 34.7, 19.8, 22.0, 27.6, 32.1, 20.2, 20.2, 26.0, 30.7, 22.1, 21.1),
portfolio = factor(rep(c("Commodities", "Stocks", "Real State", "Other Assets"), 3),
levels=c("Commodities", "Stocks", "Real State", "Other Assets")),
year = rep(c("2020","2021","2022"), each=4))
glimpse(mca)
head(mca, 10)
mybar <- ggplot(mca, aes(x=year, y=percent, fill=portfolio)) +
labs(title="Investment Portfolio") +
geom_bar(stat = "identity", position = "dodge") +
# theme(legend.position = "bottom") +
scale_fill_wsj()
ggplotly(mybar)
install.packages("ggplotly")
library(plotly)
mybar <- ggplot(mca, aes(x=year, y=percent, fill=portfolio)) +
labs(title="Investment Portfolio") +
geom_bar(stat = "identity", position = "dodge") +
# theme(legend.position = "bottom") +
scale_fill_wsj()
ggplotly(mybar)
library(plotly)
mybar <- ggplot(mca, aes(x=year, y=percent, fill=portfolio)) +
labs(title="Investment Portfolio") +
geom_bar(stat = "identity", position = "dodge") +
# theme(legend.position = "bottom") +
scale_fill_wsj()
ggplotly(mybar)
library(plotly)
mybar <- ggplot(mca, aes(x=year, y=percent, fill=portfolio)) +
labs(title="Investment Portfolio") +
#geom_bar(stat = "identity", position = "dodge") +
# theme(legend.position = "bottom") +
scale_fill_wsj()
ggplotly(mybar)
library(plotly)
mybar <- ggplot(mca, aes(x=year, y=percent, fill=portfolio)) +
labs(title="Investment Portfolio") + geom_bar() +
#geom_bar(stat = "identity", position = "dodge") +
# theme(legend.position = "bottom") +
scale_fill_wsj()
ggplotly(mybar)
base_url <- "https://www.the-numbers.com/movie/budgets/all"
base_webpage <- read_html(base_url)
table_base <- html_table(base_webpage)[[1]]
# all webpages
new_urls <- "https://www.the-numbers.com/movie/budgets/all/"
# creating one table
table_new <-data.frame()
df_movies <- data.frame()
# iterator
idx <-  seq(1, 6301, 100)
for (i in 1:length(idx)) {
new_webpage <- read_html(str_glue(new_urls, {idx[i]}))
table_new <- html_table(new_webpage)[[1]] %>%
tibble::as_tibble(.name_repair = "unique")
df_movies <- rbind(df_movies, table_new)
}
df_movies_tidy <- df_movies %>% rename(ID = `...1`) %>%
mutate(ProductionBudget = parse_number(ProductionBudget),
DomesticGross = parse_number(DomesticGross),
WorldwideGross = parse_number(WorldwideGross),
ReleaseDate = mdy(ReleaseDate),
ReleaseDate = replace_na(ReleaseDate, make_date()),
MonthOfRelease = month(ReleaseDate, label = TRUE),
YearOfRelease = year(ReleaseDate))
xaringan::inf_mr()
unlink("~/Desktop/Insync/STAT220-Fall22/Lectures/Day17_cache", recursive = TRUE)
unlink("~/Desktop/Insync/STAT220-Fall22/Lectures/Day17_cache", recursive = TRUE)
unlink("~/Desktop/Insync/STAT220-Fall22/Lectures/Day17_cache", recursive = TRUE)
unlink("~/Desktop/website/Deepak-website/static/stat220/Day17_cache", recursive = TRUE)
blogdown:::preview_site()
